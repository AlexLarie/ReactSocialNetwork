[{"/Users/user/Desktop/kamasutra/src/index.js":"1","/Users/user/Desktop/kamasutra/src/App.js":"2","/Users/user/Desktop/kamasutra/src/reportWebVitals.js":"3","/Users/user/Desktop/kamasutra/src/components/header/Header.js":"4","/Users/user/Desktop/kamasutra/src/components/footer/Footer.js":"5","/Users/user/Desktop/kamasutra/src/components/content/Content.js":"6","/Users/user/Desktop/kamasutra/src/components/nav/Nav.js":"7","/Users/user/Desktop/kamasutra/src/components/content/profile/profile/Profile.js":"8","/Users/user/Desktop/kamasutra/src/components/dialogs/Dialogs.js":"9","/Users/user/Desktop/kamasutra/src/components/news/News.js":"10","/Users/user/Desktop/kamasutra/src/components/musick/Musick.js":"11","/Users/user/Desktop/kamasutra/src/components/settings/Settings.js":"12","/Users/user/Desktop/kamasutra/src/components/dialogs/Sender/Sender.js":"13","/Users/user/Desktop/kamasutra/src/components/dialogs/Messages/Message.js":"14","/Users/user/Desktop/kamasutra/src/components/dialogs/Messages/CreateMessage.js":"15","/Users/user/Desktop/kamasutra/src/components/dialogs/Messages/MessageList.js":"16","/Users/user/Desktop/kamasutra/src/components/content/profile/PostPrev/PostPrev.js":"17","/Users/user/Desktop/kamasutra/src/components/content/profile/PostPrev/PrevItem/PrevItem.js":"18","/Users/user/Desktop/kamasutra/src/components/content/profile/PostNew/Post__new.js":"19","/Users/user/Desktop/kamasutra/src/redax/state.js":"20","/Users/user/Desktop/kamasutra/src/components/news/NewsItem.js":"21","/Users/user/Desktop/kamasutra/src/redax/profile-reducer.js":"22","/Users/user/Desktop/kamasutra/src/redax/dialogs-reducer.js":"23","/Users/user/Desktop/kamasutra/src/redax/news-reducer.js":"24","/Users/user/Desktop/kamasutra/src/redax/redux-store.js":"25","/Users/user/Desktop/kamasutra/src/components/content/profile/PostNew/Post__new__container.js":"26"},{"size":912,"mtime":1614539964396,"results":"27","hashOfConfig":"28"},{"size":1294,"mtime":1614539789550,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1608374637773,"results":"30","hashOfConfig":"28"},{"size":305,"mtime":1608843259121,"results":"31","hashOfConfig":"28"},{"size":193,"mtime":1608546272673,"results":"32","hashOfConfig":"28"},{"size":840,"mtime":1616768469963,"results":"33","hashOfConfig":"28"},{"size":561,"mtime":1608647472908,"results":"34","hashOfConfig":"28"},{"size":832,"mtime":1614092021044,"results":"35","hashOfConfig":"28"},{"size":758,"mtime":1611939243302,"results":"36","hashOfConfig":"28"},{"size":405,"mtime":1612042322443,"results":"37","hashOfConfig":"28"},{"size":206,"mtime":1608641713641,"results":"38","hashOfConfig":"28"},{"size":216,"mtime":1608641973200,"results":"39","hashOfConfig":"28"},{"size":516,"mtime":1608746322121,"results":"40","hashOfConfig":"28"},{"size":535,"mtime":1609151841011,"results":"41","hashOfConfig":"28"},{"size":1109,"mtime":1612380111729,"results":"42","hashOfConfig":"28"},{"size":568,"mtime":1611943863923,"results":"43","hashOfConfig":"28"},{"size":430,"mtime":1614445044269,"results":"44","hashOfConfig":"28"},{"size":714,"mtime":1609945870037,"results":"45","hashOfConfig":"28"},{"size":1019,"mtime":1614539890815,"results":"46","hashOfConfig":"28"},{"size":6993,"mtime":1612380003160,"results":"47","hashOfConfig":"28"},{"size":523,"mtime":1611955460117,"results":"48","hashOfConfig":"28"},{"size":1552,"mtime":1614452015026,"results":"49","hashOfConfig":"28"},{"size":1941,"mtime":1614443018838,"results":"50","hashOfConfig":"28"},{"size":154,"mtime":1614443082895,"results":"51","hashOfConfig":"28"},{"size":377,"mtime":1614517796135,"results":"52","hashOfConfig":"28"},{"size":849,"mtime":1616768395325,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1kswtnw",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},"/Users/user/Desktop/kamasutra/src/index.js",[],["113","114"],"/Users/user/Desktop/kamasutra/src/App.js",[],"/Users/user/Desktop/kamasutra/src/reportWebVitals.js",[],"/Users/user/Desktop/kamasutra/src/components/header/Header.js",[],"/Users/user/Desktop/kamasutra/src/components/footer/Footer.js",[],"/Users/user/Desktop/kamasutra/src/components/content/Content.js",["115","116","117","118","119"],"/Users/user/Desktop/kamasutra/src/components/nav/Nav.js",[],"/Users/user/Desktop/kamasutra/src/components/content/profile/profile/Profile.js",[],"/Users/user/Desktop/kamasutra/src/components/dialogs/Dialogs.js",[],"/Users/user/Desktop/kamasutra/src/components/news/News.js",[],"/Users/user/Desktop/kamasutra/src/components/musick/Musick.js",[],"/Users/user/Desktop/kamasutra/src/components/settings/Settings.js",[],"/Users/user/Desktop/kamasutra/src/components/dialogs/Sender/Sender.js",[],"/Users/user/Desktop/kamasutra/src/components/dialogs/Messages/Message.js",[],"/Users/user/Desktop/kamasutra/src/components/dialogs/Messages/CreateMessage.js",["120","121"],"import React from 'react';\nimport { changeNewMessageStateActionCreator, createMessageItemActionCreator } from '../../../redax/dialogs-reducer';\n\nimport './createMessage.css';\n\n\n\nconst CreateMessage = (props) => {\n   let newMessage = React.createRef();\n\n   let createMessage = () => {\n      props.dispatch(createMessageItemActionCreator(newMessageChange))\n      // props.createNewMessageItem(newMessageChange);\n   }\n\n   let newMessageChange = () => {\n      let newMessageText = newMessage.current.value;\n      props.dispatch(changeNewMessageStateActionCreator(newMessageText))\n      // props.changeNewMessageState(newMessageText);\n      return newMessageText;\n   }\n\n   let enterMessage = (e) => {\n      if (e.key == 'Enter' && e.ctrlKey == true){\n         createMessage();\n      } \n   }\n\n   return (\n      <div className = 'new__message'>\n         <textarea onKeyUp = {enterMessage} value = {props.newMessage} ref = {newMessage} onChange = {newMessageChange} placeholder = 'Write your message here'/>\n         <button onClick = {createMessage}>Submit</button>\n      </div>\n   )\n}\n\nexport default CreateMessage;","/Users/user/Desktop/kamasutra/src/components/dialogs/Messages/MessageList.js",[],"/Users/user/Desktop/kamasutra/src/components/content/profile/PostPrev/PostPrev.js",[],"/Users/user/Desktop/kamasutra/src/components/content/profile/PostPrev/PrevItem/PrevItem.js",[],"/Users/user/Desktop/kamasutra/src/components/content/profile/PostNew/Post__new.js",[],"/Users/user/Desktop/kamasutra/src/redax/state.js",["122"],"import dialogsReducer from \"./dialogs-reducer\";\nimport newsReducer from \"./news-reducer\";\nimport profileReducer from \"./profile-reducer\";\n\n// const ADD_POST = 'ADD-POST';\n// const NEW_TEXT_CHANGE = 'NEW-TEXT-CHANGE';\n// const CREATE_NEW_MESSAGE_ITEM = 'CREATE-NEW-MESSAGE-ITEM';\n// const CHANGE_NEW_MESSAGE = 'CHANGE-NEW-MESSAGE';\n\n\n\nlet store = {\n   _state : {\n      newsPage:{\n         news: [\n            \n         ],\n      },\n      dialogsPage:{\n         messages: [\n            \n         ],\n         dialogs: [\n            {id : \"1\",\n            name : \"Kristina\"},\n            {id : \"2\",\n            name : \"Aliaksei\"},\n            {id : \"3\",\n            name : \"Kastus\"},\n            {id : \"4\",\n            name : \"Kirill\"},\n            {id : \"5\",\n            name : \"Andrey\"},\n            {id : \"6\",\n            name : \"Vadim\"},\n            {id : \"7\",\n            name : \"Vlad\"},\n         ],\n         newMessage : \"\",\n      },\n      profilePage : {\n         posts: [\n            \n         ],\n         newPostText : \"\",\n         lastId : \"5\"\n      }  \n   },\n   changeLikes (event){\n      let id = event.target.nextSibling.getAttribute('id');\n      for (let i=0; i<this._state.profilePage.posts.length; i++){\n         if (id == this._state.profilePage.posts[i].id){\n            this._state.profilePage.posts[i].likes++\n         }\n      }\n      this.rerenderEntireTree(this._state);\n   },\n   getState(){\n      return this._state;\n   },\n   rerenderEntireTree () {\n      console.log('rerender');\n   },\n   // addPost () {\n   //    this._state.profilePage.lastId++\n   //    let newPost= {\n   //       id: this._state.profilePage.lastId,\n   //       name: 'you',\n   //       text: this._state.profilePage.newPostText,\n   //       likes: '0',\n   //       date: Date()\n   //    }\n   //    this._state.profilePage.posts.push(newPost);\n   //    this._state.profilePage.newPostText = '';\n   //    this.rerenderEntireTree(this._state);\n   // },\n   // createNewMessageItem () {\n   //    let newMessage = {\n   //       id: '3', \n   //       message: this._state.dialogsPage.newMessage, \n   //       name : 'you', \n   //       time :   Date() \n   //    }\n   //    this._state.dialogsPage.messages.push(newMessage);\n   //    this._state.dialogsPage.newMessage = '';\n   //    this.rerenderEntireTree(this._state);\n   // },\n   // newTextChange(newText){\n   //    this._state.profilePage.newPostText=newText;\n   //    this.rerenderEntireTree(this._state);\n   // },\n   // changeNewMessageState(text){\n   //    this._state.dialogsPage.newMessage = text;\n   //    this.rerenderEntireTree(this._state);\n   // },\n   subscribe(observer){\n      this.rerenderEntireTree = observer;\n   },\n\n   dispatch(action){\n      this._state.profilePage = profileReducer(this._state.profilePage, action);\n      this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\n      this._state.newsPage = newsReducer(this._state.newsPage, action);\n      this.rerenderEntireTree(this._state);\n\n      // if (action.type === ADD_POST){\n      //    this._state.profilePage.lastId++\n      //    let newPost= {\n      //       id: this._state.profilePage.lastId,\n      //       name: 'Aliaksei',\n      //       text: this._state.profilePage.newPostText,\n      //       likes: '0',\n      //       date: Date()\n      //    }\n      //    if (newPost.text != false){\n      //       this._state.profilePage.posts.push(newPost);\n      //       this._state.newsPage.news.push(newPost);\n      //    }\n      //    this._state.profilePage.newPostText = '';\n      //    this.rerenderEntireTree(this._state);\n\n\n      // } else if (action.type === NEW_TEXT_CHANGE){\n      //    this._state.profilePage.newPostText = action.newText;\n      //    this.rerenderEntireTree(this._state);\n\n\n      // } else if (action.type === CREATE_NEW_MESSAGE_ITEM){\n      //    let newMessage = {\n      //       id: '3', \n      //       message: this._state.dialogsPage.newMessage,\n      //       name : 'you', \n      //       time :   Date() \n      //    }\n      //    if (newMessage.message != false){\n      //       this._state.dialogsPage.messages.push(newMessage);\n      //    }\n      //    this._state.dialogsPage.newMessage = '';\n      //    this.rerenderEntireTree(this._state);\n\n\n      // } else if (action.type === CHANGE_NEW_MESSAGE){\n      //    this._state.dialogsPage.newMessage = action.newMessageText;\n      //    this.rerenderEntireTree(this._state);\n      // }\n      \n   }\n}\n\n\n\n\n\n\n\n// let rerenderEntireTree = () => {\n//    console.log('rerender');\n// }\n\n// let state = {\n//    dialogsPage:{\n//       messages: [\n//          {id: '1', message: 'Some text whot yqou write' , name : 'you', time :   'Today  at 11:00'  },\n//          {id: '2', message: 'Some text whot you  write' , name : 'Kristina', time   :    'Today at 12:50'  },\n//          {id: '3', message: 'Some text whot yowu write' , name : 'you', time :   'Today  at 11:10'  },\n//          {id: '4', message: 'Some text whot she answerSome text  whot she  answerSome   text whot she answerSome text whobt she ' , name :    'Kristina', time : 'Today    at 11:50'  },\n//          {id: '5', message: 'Some textr whot you write' , name : 'you', time :   'Today  at 12:20'  },\n//          {id: '6', message: 'Some ttext whot you write' , name : 'you', time :   'Today  at 12:50'  },\n//          {id: '7', message: 'Some text whot she answerSome text  whot she  answerSome   text whot she answerSome text whot she ' , name :  'Kristina', time : 'Today  at 12:55'  },\n//          {id: '8', message: 'Some tetbxt whot you write' , name : 'you', time :     'Today at 12:56' },\n//       ],\n//       dialogs: [\n//          {id : \"1\",\n//          name : \"Kristina\"},\n//          {id : \"2\",\n//          name : \"Aliaksei\"},\n//          {id : \"3\",\n//          name : \"Kastus\"},\n//          {id : \"4\",\n//          name : \"Kirill\"},\n//          {id : \"5\",\n//          name : \"Andrey\"},\n//          {id : \"6\",\n//          name : \"Vadim\"}, \n//          {id : \"7\",\n//          name : \"Vlad\"},\n//       ],\n//    },\n//    profilePage : {\n//       posts: [\n//          { id: '1', name: 'You', text: 'Some text 1', likes: '12'},\n//          { id: '2', name: 'You', text: 'Some text 2', likes: '24'},\n//          { id: '3', name: 'You', text: 'Some text 3', likes: '28'},\n//          { id: '4', name: 'You', text: 'Some text 4', likes: '12'},\n//          { id: '5', name: 'You', text: 'Some text 5', likes: '24'},\n//       ],\n//       newPostText : \"\",\n//    }  \n// }\n\n// export const addPost = () => {\n//    let newPost= {\n//       id: '5',\n//       name: 'you',\n//       text: state.profilePage.newPostText,\n//       likes: '0'\n//    }\n//    state.profilePage.posts.push(newPost);\n//    state.profilePage.newPostText = '';\n//    rerenderEntireTree(state);\n// }\n\n// export const newTextChange = (newText) => {\n//    state.profilePage.newPostText=newText;\n//    rerenderEntireTree(state);\n// }\n\n// export const subscribe = (observer) => {\n//    rerenderEntireTree = observer;\n// }\n\n\nexport default store;\n",["123","124"],"/Users/user/Desktop/kamasutra/src/components/news/NewsItem.js",[],"/Users/user/Desktop/kamasutra/src/redax/profile-reducer.js",["125"],"const ADD_POST = 'ADD-POST';\nconst NEW_TEXT_CHANGE = 'NEW-TEXT-CHANGE';\n\nlet initialState = {\n   posts: [\n      \n   ],\n   newPostText : \"\",\n   lastId : \"5\"\n} \n\nconst profileReducer = (state = initialState, action) => {\n   switch (action.type) {\n      case ADD_POST:\n         state.lastId++\n         let newPost= {\n            id: state.lastId,\n            name: 'Aliaksei',\n            text: state.newPostText,\n            likes: '0',\n            date: Date()\n         }\n         if (newPost.text != false){\n            state.posts.push(newPost);\n            // this._state.newsPage.news.push(newPost); \n         }\n         state.newPostText = '';\n         break;\n   \n      case NEW_TEXT_CHANGE:\n         state.newPostText = action.newText;\n         break;\n      default: \n         return state;\n   }\n\n   // if (action.type === ADD_POST){\n   //    state.lastId++\n   //    let newPost= {\n   //       id: state.lastId,\n   //       name: 'Aliaksei',\n   //       text: state.newPostText,\n   //       likes: '0',\n   //       date: Date()\n   //    }\n   //    if (newPost.text != false){\n   //       state.posts.push(newPost);\n   //       // this._state.newsPage.news.push(newPost);\n   //    }\n   //    state.newPostText = '';\n\n\n\n   // } else if (action.type === NEW_TEXT_CHANGE){\n   //    state.newPostText = action.newText;\n   // }\n\n   return state;\n}\n\nexport const addPostActionCreator = () => ({\n   type: ADD_POST\n})\n\nexport const newTextChangActionCreator = (newText) => ({\n   type: NEW_TEXT_CHANGE,\n   newText: newText\n})\n\n\nexport default profileReducer","/Users/user/Desktop/kamasutra/src/redax/dialogs-reducer.js",["126"],"const CREATE_NEW_MESSAGE_ITEM = 'CREATE-NEW-MESSAGE-ITEM';\nconst CHANGE_NEW_MESSAGE = 'CHANGE-NEW-MESSAGE';\n\nlet initialState = {\n   messages: [\n      \n   ],\n   dialogs: [\n      {id : \"1\",\n      name : \"Kristina\"},\n      {id : \"2\",\n      name : \"Aliaksei\"},\n      {id : \"3\",\n      name : \"Kastus\"},\n      {id : \"4\",\n      name : \"Kirill\"},\n      {id : \"5\",\n      name : \"Andrey\"},\n      {id : \"6\",\n      name : \"Vadim\"},\n      {id : \"7\",\n      name : \"Vlad\"},\n   ],\n   newMessage : \"\",\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n\n\n   switch (action.type) {\n      case CREATE_NEW_MESSAGE_ITEM:\n         let newMessage = {\n            id: '3', \n            message: state.newMessage,\n            name : 'you', \n            time :   Date() \n         }\n         if (newMessage.message != false){\n            state.messages.push(newMessage);\n         }\n         state.newMessage = '';\n         break;\n   \n      case CHANGE_NEW_MESSAGE:\n         state.newMessage = action.newMessageText;\n         break;\n      \n      default: \n         return state;\n   }\n\n   // if (action.type === CREATE_NEW_MESSAGE_ITEM){\n   //    let newMessage = {\n   //       id: '3', \n   //       message: state.newMessage,\n   //       name : 'you', \n   //       time :   Date() \n   //    }\n   //    if (newMessage.message != false){\n   //       state.messages.push(newMessage);\n   //    }\n   //    state.newMessage = '';\n   //    // this.rerenderEntireTree(this._state);\n\n\n   // } else if (action.type === CHANGE_NEW_MESSAGE){\n   //    state.newMessage = action.newMessageText;\n   //    // this.rerenderEntireTree(this._state);\n   // }\n   \n   return state\n}\n\nexport const createMessageItemActionCreator = (newMessageChange)=> ({\n   type: CREATE_NEW_MESSAGE_ITEM,\n   newMessageChange: newMessageChange\n})\n\nexport const changeNewMessageStateActionCreator = (text) => ({\n   type: CHANGE_NEW_MESSAGE,\n   newMessageText: text\n})\n\nexport default dialogsReducer","/Users/user/Desktop/kamasutra/src/redax/news-reducer.js",[],"/Users/user/Desktop/kamasutra/src/redax/redux-store.js",[],"/Users/user/Desktop/kamasutra/src/components/content/profile/PostNew/Post__new__container.js",["127","128","129"],"import React from 'react';\nimport { addPostActionCreator, newTextChangActionCreator } from '../../../../redax/profile-reducer';\nimport Post__new from './Post__new';\n\n\n// let addPostActionCreator = () => {\n//    return {\n//       type: 'ADD-POST'\n//    }\n// }\n\n// let newTextChangActionCreator = (newText) => {\n//    return {\n//       type: 'NEW-TEXT-CHANGE',\n//       newText: newText\n//    }\n// }\n\nconst Post__new__container = (props) => {\n\n   let newPost = () => {\n      props.addPost();\n      //props.dispatch(addPostActionCreator());\n   }\n\n   let newPostChange = (newText) => {\n      props.updateNewPostText(newText);\n      //props.dispatch(newTextChangActionCreator(newText));\n   }\n\n   return(\n      <Post__new newPost = {newPost} newPostChange = {newPostChange} newPostText = {props.newPostText}/>\n   )\n}\n\nexport default Post__new__container; ",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":14,"column":10,"nodeType":"140","endLine":14,"endColumn":160},{"ruleId":"141","severity":2,"message":"142","line":14,"column":43,"nodeType":"136","messageId":"143","endLine":14,"endColumn":50},{"ruleId":"141","severity":2,"message":"144","line":14,"column":73,"nodeType":"136","messageId":"143","endLine":14,"endColumn":90},{"ruleId":"138","severity":1,"message":"145","line":15,"column":10,"nodeType":"140","endLine":15,"endColumn":84},{"ruleId":"146","severity":1,"message":"147","line":24,"column":17,"nodeType":"148","messageId":"149","endLine":24,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":24,"column":41,"nodeType":"148","messageId":"149","endLine":24,"endColumn":43},{"ruleId":"146","severity":1,"message":"147","line":52,"column":17,"nodeType":"148","messageId":"149","endLine":52,"endColumn":19},{"ruleId":"130","replacedBy":"150"},{"ruleId":"132","replacedBy":"151"},{"ruleId":"146","severity":1,"message":"152","line":23,"column":27,"nodeType":"148","messageId":"149","endLine":23,"endColumn":29},{"ruleId":"146","severity":1,"message":"152","line":38,"column":33,"nodeType":"148","messageId":"149","endLine":38,"endColumn":35},{"ruleId":"134","severity":1,"message":"153","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":30},{"ruleId":"134","severity":1,"message":"154","line":2,"column":32,"nodeType":"136","messageId":"137","endLine":2,"endColumn":57},{"ruleId":"138","severity":1,"message":"155","line":32,"column":7,"nodeType":"140","endLine":32,"endColumn":105},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'Post__new' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Post__new__container must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-undef","'addPost' is not defined.","undef","'updateNewPostText' is not defined.","Imported JSX component Post__prev must be in PascalCase or SCREAMING_SNAKE_CASE","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["156"],["157"],"Expected '!==' and instead saw '!='.","'addPostActionCreator' is defined but never used.","'newTextChangActionCreator' is defined but never used.","Imported JSX component Post__new must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]